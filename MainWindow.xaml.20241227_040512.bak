<?xml version="1.0" encoding="utf-8"?>
<mah:MetroWindow x:Class="GoogleCalendarNotifier.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GoogleCalendarNotifier"
        xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:ni="clr-namespace:H.NotifyIcon;assembly=H.NotifyIcon.Wpf"
        mc:Ignorable="d"
        Title="Calendar Notifications" 
        Height="700" Width="900"
        MinHeight="600" MinWidth="800"
        ShowTitleBar="True"
        WindowTitleBrush="{StaticResource CustomBackgroundBrush}"
        NonActiveWindowTitleBrush="{StaticResource CustomSecondaryBrush}"
        GlowBrush="{StaticResource CustomAccentBrush}"
        Background="{StaticResource CustomBackgroundBrush}"
        WindowStartupLocation="CenterScreen"
        TitleCharacterCasing="Normal"
        WindowTransitionsEnabled="False"
        NonActiveBorderBrush="{StaticResource CustomAccentBrush}"
        BorderBrush="{StaticResource CustomAccentBrush}"
        BorderThickness="1"
        UseNoneWindowStyle="False"
        StateChanged="Window_StateChanged"
        Closing="Window_Closing">
    
    <Window.Resources>
        <!-- Calendar Day Button Template -->
        <ControlTemplate x:Key="CalendarDayButtonTemplate" TargetType="CalendarDayButton">
            <Grid>
                <Border x:Name="Background" 
                       Background="Transparent"
                       BorderBrush="{StaticResource CustomAccentBrush}"
                       BorderThickness="0"
                       CornerRadius="4"/>
                <ContentPresenter x:Name="Content" 
                                HorizontalAlignment="Center" 
                                VerticalAlignment="Center" 
                                Margin="1"/>
                <Border x:Name="EventIndicator"
                        Height="2"
                        Background="{StaticResource CustomAccentBrush}"
                        VerticalAlignment="Bottom"
                        Margin="2,0,2,2"
                        Visibility="Collapsed"/>
            </Grid>
            <ControlTemplate.Triggers>
                <DataTrigger Binding="{Binding HasEvents}" Value="True">
                    <Setter TargetName="EventIndicator" Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter TargetName="Background" Property="Background" Value="{StaticResource CustomAccentBrush}"/>
                    <Setter TargetName="EventIndicator" Property="Background" Value="White"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="IsFocused" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter TargetName="Background" Property="Background" Value="{StaticResource CustomAccentBrush}"/>
                    <Setter TargetName="EventIndicator" Property="Background" Value="White"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Item Container Style for ListView -->
        <Style x:Key="EventItemStyle" TargetType="ListViewItem">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelectedDay}" Value="True">
                    <Setter Property="Background" Value="#335B6EA6"/>
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Foreground" Value="White"/>
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#4089B4FA"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="White"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#4089B4FA"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="White"/>
            </Style.Resources>
        </Style>
    </Window.Resources>

    <Grid Margin="4">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="280"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Left Column: Calendar and Event Details -->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Calendar -->
            <Border Grid.Row="0"
                   CornerRadius="8" 
                   Background="{StaticResource CustomSecondaryBrush}" 
                   BorderBrush="{StaticResource CustomAccentBrush}" 
                   BorderThickness="1"
                   Margin="0,0,0,4">
                <Calendar x:Name="MainCalendar"
                         Height="Auto"
                         Style="{DynamicResource MahApps.Styles.Calendar}"
                         SelectionMode="SingleDate"
                         Background="Transparent"
                         Foreground="White"
                         SelectedDatesChanged="MainCalendar_SelectedDatesChanged"
                         Loaded="MainCalendar_Loaded"
                         Margin="1">
                    <Calendar.CalendarDayButtonStyle>
                        <Style TargetType="CalendarDayButton" BasedOn="{StaticResource MahApps.Styles.CalendarDayButton}">
                            <Setter Property="Template" Value="{StaticResource CalendarDayButtonTemplate}"/>
                        </Style>
                    </Calendar.CalendarDayButtonStyle>
                </Calendar>
            </Border>

            <!-- Event Details -->
            <Border Grid.Row="1"
                    Background="{StaticResource CustomSecondaryBrush}"
                    BorderBrush="{StaticResource CustomAccentBrush}"
                    BorderThickness="1"
                    CornerRadius="8">
                <TextBlock x:Name="EventDetailsBlock"
                         Margin="8"
                         Background="Transparent"
                         Foreground="White"
                         TextWrapping="Wrap"/>
            </Border>
        </Grid>

        <!-- Events List -->
        <ListView x:Name="EventsList"
                 Grid.Column="1"
                 Margin="4,0,0,0"
                 Padding="0"
                 Style="{DynamicResource MahApps.Styles.ListView}"
                 Background="{StaticResource CustomSecondaryBrush}"
                 BorderBrush="{StaticResource CustomAccentBrush}"
                 BorderThickness="1"
                 Foreground="White"
                 SelectionChanged="EventsList_SelectionChanged"
                 ItemContainerStyle="{StaticResource EventItemStyle}">
            <ListView.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="8"/>
                </Style>
            </ListView.Resources>
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="DATE/TIME" Width="140" DisplayMemberBinding="{Binding DateTime}"/>
                    <GridViewColumn Header="TITLE" Width="300" DisplayMemberBinding="{Binding Title}"/>
                    <GridViewColumn Header="NEXT ALERT" Width="160" DisplayMemberBinding="{Binding NotificationTime}"/>
                </GridView>
            </ListView.View>
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Snooze">
                        <MenuItem Header="5 Minutes" Click="Snooze5Min_Click"/>
                        <MenuItem Header="15 Minutes" Click="Snooze15Min_Click"/>
                        <MenuItem Header="30 Minutes" Click="Snooze30Min_Click"/>
                        <MenuItem Header="1 Hour" Click="Snooze1Hour_Click"/>
                        <MenuItem Header="1 Day" Click="Snooze1Day_Click"/>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Clear Snooze" Click="ClearNotification_Click"/>
                </ContextMenu>
            </ListView.ContextMenu>
        </ListView>

        <!-- Tray Icon -->
        <tb:TaskbarIcon
            x:Name="NotifyIcon"
            IconSource="/app.ico"
            ToolTipText="Calendar Notifications"
            MouseDoubleClick="NotifyIcon_TrayMouseDoubleClick">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Show" Click="ShowMenuItem_Click"/>
                    <MenuItem Header="Exit" Click="ExitMenuItem_Click"/>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
    </Grid>
</mah:MetroWindow>
